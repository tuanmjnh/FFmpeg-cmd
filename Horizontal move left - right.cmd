❶ Horizontal move: left - right
→ ffmpeg -i input.mp4 -vf "crop=in_w*0.90:in_h*0.90:(in_w*0.10)/10*t:108,scale=1920:1080" output01.mp4

with:
* -i input.mp4 = Reads file «input.mp4» and …
*-vf = … and applies video filters (vf)…
* crop = … starting by cutting (crop) a rectangular piece of the video…
* in_w*0.90:in_h*0.90 = … that is 90% the size of the original video… (The ffmpeg Guy "Note, in_w = video input width, in_h = video input height")
* (in_w*0.10)/10*t = … starting to cut at position x = 0 for t = 0, x = 192 for t = 1, x = 384 at t = 2, ... x = 1920 for t = 10, i. e. moving by 1% video width every (t) seconds…
* 108 = Cut position on the y axis is constant at 108
* scale=1920:1080 = Scales now the cut video (90% of the original size) back to 1920x1080…
* output01.mp4 = … and outputs the result to file «output01.mp4»
Note: It kinda works, but the overlay shows a jittery movement (similar to when zooming into a picture with ffmpeg). This will be solved in our next example.